server:
  port: 8081
spring:
  application:
    name: consumer
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.kafka.consumer.model.RiderLocation




#  Config Key                                     What It Does
#  key-deserializer                              Tells Kafka how to convert the message key from bytes back to a String
#  value-deserializer                            Uses an error-handling wrapper to safely convert the message value from JSON


#  ðŸ”¹ spring.deserializer.value.delegate.class
#ðŸ’¬ Meaning:
#  "Use this deserializer to convert JSON into Java objects."
#
#  âœ… You're telling Spring to use JsonDeserializer (from Spring Kafka) to turn the message's JSON into your Java class.



#  ðŸ”¹ spring.json.value.default.type
#ðŸ’¬ Meaning:
#  "Always convert the JSON into this specific Java class."
#
#âœ… Here, you're saying:
#  "Treat the incoming JSON as a RiderLocation object."


#  ðŸ”¹ spring.json.trusted.packages
#ðŸ’¬ Meaning:
#  "Trust classes from these packages when converting JSON to Java objects."
#
#âœ… Setting it to "*" means:
#  "Trust any package."
#  (It works, but it's safer to name only the packages you expect.)